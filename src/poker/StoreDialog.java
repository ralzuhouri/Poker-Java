/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package poker;

import javax.swing.JList;
import javax.swing.JOptionPane;

/**
 *
 * @author ramy
 */
public class StoreDialog extends javax.swing.JDialog {

    public enum Mode
    {
        Load,Save
    }
    public static final String OPEN_STRING= "Choose the game to load";
    public static final String SAVE_STRING= "Choose a slot to save the game";
    private Mode mode;
    
    public Mode getMode()
    {
        return mode;
    }
    public void setMode(Mode mode)
    {
        label.setText(mode== Mode.Load? OPEN_STRING : SAVE_STRING);
        this.mode= mode;
    }
    
    public JList getList()
    {
        return list;
    }
    
    /**
     * Creates new form StoreDialog
     */
    public StoreDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrollPanel = new javax.swing.JScrollPane();
        list = new javax.swing.JList();
        label = new javax.swing.JLabel();
        confirmButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                activated(evt);
            }
        });

        list.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        list.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        list.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                selectionChanged(evt);
            }
        });
        scrollPanel.setViewportView(list);

        label.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label.setText("Choose the game to load");

        confirmButton.setText("Confirm");
        confirmButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                confirm(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancel(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(57, 57, 57)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(scrollPanel)
                    .add(label, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 347, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(confirmButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 120, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(cancelButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 120, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(90, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(27, 27, 27)
                .add(label)
                .add(29, 29, 29)
                .add(scrollPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 250, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(29, 29, 29)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(confirmButton)
                    .add(cancelButton))
                .addContainerGap(60, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void selectionChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_selectionChanged
        // TODO add your handling code here:
        if(mode== Mode.Load)
        {
            int index= evt.getFirstIndex();
            Game game= Store.getInstance().getGames().get(index);
            confirmButton.setEnabled(!game.isEmpty());
        }
        else
        {
            confirmButton.setEnabled(true);
        }
    }//GEN-LAST:event_selectionChanged

    private void confirm(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_confirm
        // TODO add your handling code here:
        Frame frame= (Frame) this.getParent();
        int index= list.getSelectedIndex();
        if(mode== Mode.Load)
        {
            frame.loadGame(index);
            this.setVisible(false);
        }
        else if(mode== Mode.Save)
        {
            Game game= Store.getInstance().getGames().get(index);
            if(!game.isEmpty())
            {
                int choice=JOptionPane.showOptionDialog(this, "Would you like to overwrite this slot?", "Overwrite game", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);
                if(choice== JOptionPane.NO_OPTION || choice== JOptionPane.CLOSED_OPTION)
                    return;
            }
            String name= JOptionPane.showInputDialog(this, "Please choose a name for the slot", "Enter name", JOptionPane.QUESTION_MESSAGE);
            if(name== null)
                return;
            if(name.isEmpty())
            {
                JOptionPane.showMessageDialog(this, "Entered a name of at least a character","Invalid name",JOptionPane.WARNING_MESSAGE);
                return;
            }
            frame.saveGame(name,index);
            this.setVisible(false);
        }
    }//GEN-LAST:event_confirm

    private void cancel(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancel
        // TODO add your handling code here:
        this.setVisible(false);
        System.out.println(this.getParent());
    }//GEN-LAST:event_cancel

    private void activated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_activated
        // TODO add your handling code here:
        confirmButton.setEnabled(false);
        list.clearSelection();
    }//GEN-LAST:event_activated

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StoreDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StoreDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StoreDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StoreDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                StoreDialog dialog = new StoreDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton confirmButton;
    private javax.swing.JLabel label;
    private javax.swing.JList list;
    private javax.swing.JScrollPane scrollPanel;
    // End of variables declaration//GEN-END:variables
}
